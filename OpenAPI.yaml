openapi: 3.0.3
info:
  title: Argent Bank API - Transactions
  description: |-
    API pour la gestion des transactions bancaires d'Argent Bank.
    Cette API permet aux utilisateurs de visualiser, créer, modifier et supprimer leurs transactions.
  version: 1.0.0

servers:
  - url: http://localhost:3001/api/v1
    description: Serveur de développement

tags:
  - name: transactions
    description: Opérations liées aux transactions bancaires

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          example: "t123"
        date:
          type: string
          format: date
          example: "2024-03-20"
        description:
          type: string
          example: "Golden Sun Bakery"
        amount:
          type: number
          format: float
          example: 5.00
        type:
          type: string
          enum: [DEBIT, CREDIT]
          example: "DEBIT"
        category:
          type: string
          example: "Food"
        notes:
          type: string
          example: "Breakfast croissants"
        balance:
          type: number
          format: float
          example: 2082.79

    TransactionDetail:
      allOf:
        - $ref: "#/components/schemas/Transaction"
        - type: object
          properties:
            pending:
              type: boolean
              example: false

# Application de la sécurité globale
security:
  - BearerAuth: []

# Récupération des transactions du mois
paths:
  /user/{userId}/accounts/{accountId}/transactions:
    get:
      tags:
        - transactions
      summary: Récupère toutes les transactions du mois en cours
      description: Retourne la liste des transactions du mois en cours pour un compte spécifique. L'utilisateur doit être authentifié avec un token JWT valide et ne peut accéder qu'à ses propres comptes.
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: Identifiant de l'utilisateur (doit correspondre à l'utilisateur authentifié par le token)
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          description: Identifiant du compte
          schema:
            type: string
        - name: month
          in: query
          required: false
          description: Mois des transactions (format MM-YYYY)
          schema:
            type: string
      responses:
        "200":
          description: Liste des transactions récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Transactions récupérées avec succès"
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "400":
          description: Paramètres invalides
        "401":
          description: Non autorisé - Authentification requise ou token invalide
        "403":
          description: Accès refusé - Vous n'avez pas accès à ce compte (l'ID utilisateur ne correspond pas au token)
        "404":
          description: Compte non trouvé
  # Récupération des détails d'une transaction
  /user/{userId}/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - transactions
      summary: Récupère les détails d'une transaction
      description: Retourne les informations détaillées d'une transaction spécifique. L'utilisateur doit être authentifié avec un token JWT valide et ne peut accéder qu'à ses propres transactions.
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: Identifiant de l'utilisateur (doit correspondre à l'utilisateur authentifié par le token)
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          description: Identifiant du compte
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          description: Identifiant de la transaction
          schema:
            type: string
      responses:
        "200":
          description: Détails de la transaction récupérés avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Détails de la transaction récupérés avec succès"
                  body:
                    $ref: "#/components/schemas/TransactionDetail"
        "401":
          description: Non autorisé - Authentification requise ou token invalide
        "403":
          description: Accès refusé - Vous n'avez pas accès à cette transaction
        "404":
          description: Transaction non trouvée

    post:
      tags:
        - transactions
      summary: Ajoute des informations à une transaction
      description: Permet d'ajouter de nouvelles informations à une transaction existante. L'utilisateur doit être authentifié avec un token JWT valide et ne peut modifier que ses propres transactions.
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: Identifiant de l'utilisateur (doit correspondre à l'utilisateur authentifié par le token)
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          description: Identifiant du compte
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          description: Identifiant de la transaction
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  description: Catégorie à ajouter à la transaction
                notes:
                  type: string
                  description: Notes personnelles à ajouter à la transaction
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags à associer à la transaction
      responses:
        "201":
          description: Informations ajoutées avec succès à la transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Informations ajoutées à la transaction avec succès"
                  body:
                    $ref: "#/components/schemas/TransactionDetail"
        "400":
          description: Données invalides
        "401":
          description: Non autorisé - Authentification requise ou token invalide
        "403":
          description: Accès refusé - Vous n'avez pas accès à cette transaction
        "404":
          description: Transaction non trouvée

    put:
      tags:
        - transactions
      summary: Modifie les détails d'une transaction
      description: Permet de modifier la catégorie et les notes d'une transaction. L'utilisateur doit être authentifié avec un token JWT valide et ne peut modifier que ses propres transactions.
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: Identifiant de l'utilisateur (doit correspondre à l'utilisateur authentifié par le token)
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          description: Identifiant du compte
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          description: Identifiant de la transaction
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  description: Nouvelle catégorie pour la transaction
                notes:
                  type: string
                  description: Notes personnelles sur la transaction
      responses:
        "200":
          description: Transaction modifiée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Transaction modifiée avec succès"
                  body:
                    $ref: "#/components/schemas/TransactionDetail"
        "400":
          description: Données invalides
        "401":
          description: Non autorisé - Authentification requise ou token invalide
        "403":
          description: Accès refusé - Vous n'avez pas accès à cette transaction
        "404":
          description: Transaction non trouvée

    delete:
      tags:
        - transactions
      summary: Supprime des informations d'une transaction
      description: Permet de supprimer certaines informations associées à une transaction. L'utilisateur doit être authentifié avec un token JWT valide et ne peut modifier que ses propres transactions.
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: Identifiant de l'utilisateur (doit correspondre à l'utilisateur authentifié par le token)
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          description: Identifiant du compte
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          description: Identifiant de la transaction
          schema:
            type: string
        - name: infoType
          in: query
          required: true
          description: Type d'information à supprimer (category, notes, tags)
          schema:
            type: string
            enum: [category, notes, tags]
      responses:
        "200":
          description: Informations supprimées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Informations supprimées avec succès"
                  body:
                    $ref: "#/components/schemas/TransactionDetail"
        "400":
          description: Paramètres invalides
        "401":
          description: Non autorisé - Authentification requise ou token invalide
        "403":
          description: Accès refusé - Vous n'avez pas accès à cette transaction
        "404":
          description: Transaction non trouvée
